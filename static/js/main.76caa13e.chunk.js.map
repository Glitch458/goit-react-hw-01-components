{"version":3,"sources":["profile/Profile.module.css","statistic/Statistic.module.css","friends/Friends.module.css","profile/Profile.js","statistic/Statistic.js","friends/Friends.js","transactions/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","profile","avatar","username","tag","location","stats","className","styles","src","alt","statsItem","label","followers","views","likes","Statistic","title","statistic","statsList","map","stat","item","percentage","id","Friends","friends","friendList","friend","isOnline","itemOn","itemOff","width","name","TransactionHistory","props","items","type","amount","currency","App","Profile","user","data","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,MAAQ,uBAAuB,UAAY,2BAA2B,MAAQ,yB,yPCApKD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,yBAAyB,UAAY,6BAA6B,KAAO,0B,iBCA5ID,EAAOC,QAAU,CAAC,WAAa,4BAA4B,OAAS,wBAAwB,QAAU,2B,u9FC4BvFC,MA3Bf,YAA8D,IAA3CC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAClD,OACE,sBAAKC,UAAWC,IAAOP,QAAvB,UACE,sBAAKM,UAAU,cAAf,UACE,qBAAKE,IAAKP,EAAQQ,IAAI,cAAcH,UAAWC,IAAON,SACtD,mBAAGK,UAAU,OAAb,SAAqBJ,IACrB,oBAAGI,UAAU,MAAb,cAAqBH,KACrB,mBAAGG,UAAU,WAAb,SAAyBF,OAE3B,qBAAIE,UAAWC,IAAOF,MAAtB,UACE,qBAAIC,UAAWC,IAAOG,UAAtB,UACE,sBAAMJ,UAAWC,IAAOI,MAAxB,uBACA,sBAAML,UAAU,WAAhB,SAA4BD,EAAMO,eAEpC,qBAAIN,UAAWC,IAAOG,UAAtB,UACE,sBAAMJ,UAAWC,IAAOI,MAAxB,mBACA,sBAAML,UAAU,WAAhB,SAA4BD,EAAMQ,WAEpC,qBAAIP,UAAWC,IAAOG,UAAtB,UACE,sBAAMJ,UAAWC,IAAOI,MAAxB,mBACA,sBAAML,UAAU,WAAhB,SAA4BD,EAAMS,kB,gBCH7BC,MAjBf,YAAsC,IAAjBC,EAAgB,EAAhBA,MAAOX,EAAS,EAATA,MAC1B,OACE,0BAASC,UAAWC,IAAOU,UAA3B,UACGD,GAAS,oBAAIV,UAAWC,IAAOS,MAAtB,SAA8BA,IAExC,oBAAIV,UAAWC,IAAOW,UAAtB,SACGb,EAAMc,KAAI,SAAAC,GAAI,OACb,qBAAId,UAAWC,IAAOc,KAAtB,UACE,sBAAMf,UAAU,QAAhB,SAAyBc,EAAKT,QAC9B,uBAAML,UAAU,aAAhB,UAA8Bc,EAAKE,WAAnC,SAF+BF,EAAKG,a,gBCgBjCC,MAvBf,YAA+B,IAAZC,EAAW,EAAXA,QACjB,OACE,oBAAInB,UAAWC,IAAOmB,WAAtB,SACGD,EAAQN,KAAI,SAAAQ,GACX,OACE,qBACErB,UAAWqB,EAAOC,SAAWrB,IAAOsB,OAAStB,IAAOuB,QADtD,UAIE,qBACExB,UAAU,SACVE,IAAKmB,EAAO1B,OACZQ,IAAI,cACJsB,MAAM,OAER,mBAAGzB,UAAU,OAAb,SAAqBqB,EAAOK,SARvBL,EAAOJ,UCiBTU,MA1Bf,SAA4BC,GAC1B,OACE,wBAAO5B,UAAU,sBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACG4B,EAAMC,MAAMhB,KAAI,SAAAE,GACf,OACE,+BACE,6BAAKA,EAAKe,OACV,6BAAKf,EAAKgB,SACV,6BAAKhB,EAAKiB,aAHHjB,EAAKE,a,6BCwBXgB,MA3Bf,WACE,OACE,qCACE,cAACC,EAAD,CACEtC,SAAUuC,EAAKvC,SACfC,IAAKsC,EAAKtC,IACVC,SAAUqC,EAAKrC,SACfH,OAAQwC,EAAKxC,OACbI,MAAOoC,EAAKpC,QAEd,cAAC,EAAD,CAAYW,MAAM,eAAeX,MAAOqC,IACxC,cAAC,EAAD,CAAYjB,QAASA,IACrB,cAAC,EAAD,CAAoBU,MAAOQ,QCXlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.76caa13e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__Jz59b\",\"avatar\":\"Profile_avatar__78EYi\",\"stats\":\"Profile_stats__1rw8u\",\"statsItem\":\"Profile_statsItem__3FWd7\",\"label\":\"Profile_label__1Djua\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"Statistic_statistic__h_ef9\",\"title\":\"Statistic_title__23H0_\",\"statsList\":\"Statistic_statsList__2TUeF\",\"item\":\"Statistic_item__2vMwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"Friends_friendList__2po7V\",\"itemOn\":\"Friends_itemOn__2O2FW\",\"itemOff\":\"Friends_itemOff__3jtuE\"};","import styles from './Profile.module.css';\n\nfunction profile({ avatar, username, tag, location, stats }) {\n  return (\n    <div className={styles.profile}>\n      <div className=\"description\">\n        <img src={avatar} alt=\"User avatar\" className={styles.avatar} />\n        <p className=\"name\">{username}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n      <ul className={styles.stats}>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Followers</span>\n          <span className=\"quantity\">{stats.followers}</span>\n        </li>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Views</span>\n          <span className=\"quantity\">{stats.views}</span>\n        </li>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Likes</span>\n          <span className=\"quantity\">{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default profile;\n","import styles from './Statistic.module.css';\n\nfunction Statistic({ title, stats }) {\n  return (\n    <section className={styles.statistic}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n\n      <ul className={styles.statsList}>\n        {stats.map(stat => (\n          <li className={styles.item} key={stat.id}>\n            <span className=\"label\">{stat.label}</span>\n            <span className=\"percentage\">{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default Statistic;\n","import styles from './Friends.module.css';\n\nfunction Friends({ friends }) {\n  return (\n    <ul className={styles.friendList}>\n      {friends.map(friend => {\n        return (\n          <li\n            className={friend.isOnline ? styles.itemOn : styles.itemOff}\n            key={friend.id}\n          >\n            <img\n              className=\"avatar\"\n              src={friend.avatar}\n              alt=\"User avatar\"\n              width=\"48\"\n            />\n            <p className=\"name\">{friend.name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default Friends;\n","function TransactionHistory(props) {\n  return (\n    <table className=\"transaction-history\">\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {props.items.map(item => {\n          return (\n            <tr key={item.id}>\n              <td>{item.type}</td>\n              <td>{item.amount}</td>\n              <td>{item.currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TransactionHistory;\n","import PropTypes from 'prop-types';\nimport './App.css';\nimport Profile from './profile/Profile';\nimport Statistics from './statistic/Statistic';\nimport FriendList from './friends/Friends';\nimport TransactionHistory from './transactions/TransactionHistory';\nimport user from './json/user.json';\nimport data from './json/data.json';\nimport friends from './json/friends.json';\nimport transactions from './json/transactions.json';\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </>\n  );\n}\n\nApp.propTypes = {\n  username: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  stats: PropTypes.string,\n  title: PropTypes.string,\n  friends: PropTypes.string,\n  items: PropTypes.string,\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}