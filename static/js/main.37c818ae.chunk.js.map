{"version":3,"sources":["profile/Profile.js","statistic/Statistic.js","friends/Friends.js","transactions/transactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["profile","avatar","username","tag","location","stats","className","src","alt","followers","views","likes","Statistic","title","map","stat","label","percentage","id","Friends","friends","friend","isOnline","width","name","TransactionHistory","props","items","item","type","amount","currency","App","user","data","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4xGAAe,SAASA,EAAT,GAA8D,IAA3CC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MACjE,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKC,IAAKN,EAAQO,IAAI,cAAcF,UAAU,WAC9C,mBAAGA,UAAU,OAAb,SAAqBJ,IACrB,oBAAGI,UAAU,MAAb,cAAqBH,KACrB,mBAAGG,UAAU,WAAb,SAAyBF,OAE3B,qBAAIE,UAAU,QAAd,UACE,+BACE,sBAAMA,UAAU,QAAhB,uBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMI,eAEpC,+BACE,sBAAMH,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMK,WAEpC,+BACE,sBAAMJ,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMM,iBCpB7B,SAASC,EAAT,GAAsC,IAAjBC,EAAgB,EAAhBA,MAAOR,EAAS,EAATA,MACzC,OACE,0BAASC,UAAU,aAAnB,UACE,oBAAIA,UAAU,QAAd,SAAuBO,IACvB,oBAAIP,UAAU,YAAd,SACGD,EAAMS,KAAI,SAAAC,GAAI,OACb,qBAAIT,UAAU,OAAd,UACE,sBAAMA,UAAU,QAAhB,SAAyBS,EAAKC,QAC9B,uBAAMV,UAAU,aAAhB,UAA8BS,EAAKE,WAAnC,SAFwBF,EAAKG,YCN1B,SAASC,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAChC,OACE,oBAAId,UAAU,cAAd,SACGc,EAAQN,KAAI,SAAAO,GACX,OACE,qBAAIf,UAAU,OAAd,UACE,sBAAMA,UAAU,SAAhB,SACGe,EAAOC,SAAW,SAAW,YAEhC,qBACEhB,UAAU,SACVC,IAAKc,EAAOpB,OACZO,IAAI,cACJe,MAAM,OAER,mBAAGjB,UAAU,OAAb,SAAqBe,EAAOG,SAVJH,EAAOH,SCL5B,SAASO,EAAmBC,GACzC,OACE,wBAAOpB,UAAU,sBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGoB,EAAMC,MAAMb,KAAI,SAAAc,GACf,OACE,+BACE,6BAAKA,EAAKC,OACV,6BAAKD,EAAKE,SACV,6BAAKF,EAAKG,aAHHH,EAAKV,Y,gCCaXc,MAjBf,WACE,OACE,qCACE,cAAC,EAAD,CACE9B,SAAU+B,EAAK/B,SACfC,IAAK8B,EAAK9B,IACVC,SAAU6B,EAAK7B,SACfH,OAAQgC,EAAKhC,OACbI,MAAO4B,EAAK5B,QAEd,cAACO,EAAD,CAAYC,MAAM,eAAeR,MAAO6B,IACxC,cAAC,EAAD,CAAYd,QAASA,IACrB,cAACK,EAAD,CAAoBE,MAAOQ,QCVlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.37c818ae.chunk.js","sourcesContent":["export default function profile({ avatar, username, tag, location, stats }) {\n  return (\n    <div className=\"profile\">\n      <div className=\"description\">\n        <img src={avatar} alt=\"User avatar\" className=\"avatar\" />\n        <p className=\"name\">{username}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n      <ul className=\"stats\">\n        <li>\n          <span className=\"label\">Followers</span>\n          <span className=\"quantity\">{stats.followers}</span>\n        </li>\n        <li>\n          <span className=\"label\">Views</span>\n          <span className=\"quantity\">{stats.views}</span>\n        </li>\n        <li>\n          <span className=\"label\">Likes</span>\n          <span className=\"quantity\">{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","export default function Statistic({ title, stats }) {\n  return (\n    <section className=\"statistics\">\n      <h2 className=\"title\">{title}</h2>\n      <ul className=\"stat-list\">\n        {stats.map(stat => (\n          <li className=\"item\" key={stat.id}>\n            <span className=\"label\">{stat.label}</span>\n            <span className=\"percentage\">{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n","export default function Friends({ friends }) {\n  return (\n    <ul className=\"friend-list\">\n      {friends.map(friend => {\n        return (\n          <li className=\"item\" key={friend.id}>\n            <span className=\"status\">\n              {friend.isOnline ? 'Online' : 'Offline'}\n            </span>\n            <img\n              className=\"avatar\"\n              src={friend.avatar}\n              alt=\"User avatar\"\n              width=\"48\"\n            />\n            <p className=\"name\">{friend.name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","export default function TransactionHistory(props) {\n  return (\n    <table className=\"transaction-history\">\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {props.items.map(item => {\n          return (\n            <tr key={item.id}>\n              <td>{item.type}</td>\n              <td>{item.amount}</td>\n              <td>{item.currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n","import './App.css';\nimport Profile from './profile/Profile';\nimport Statistics from './statistic/Statistic';\nimport FriendList from './friends/Friends';\nimport TransactionHistory from './transactions/transactionHistory';\nimport user from './json/user.json';\nimport data from './json/data.json';\nimport friends from './json/friends.json';\nimport transactions from './json/transactions.json';\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}